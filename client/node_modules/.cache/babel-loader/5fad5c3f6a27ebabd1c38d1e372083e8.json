{"ast":null,"code":"import _classCallCheck from \"C:\\\\Amr\\\\Duisburg\\\\1semester\\\\AdvancedWebTechnology\\\\project\\\\2\\\\Final-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Amr\\\\Duisburg\\\\1semester\\\\AdvancedWebTechnology\\\\project\\\\2\\\\Final-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Amr\\\\Duisburg\\\\1semester\\\\AdvancedWebTechnology\\\\project\\\\2\\\\Final-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Amr\\\\Duisburg\\\\1semester\\\\AdvancedWebTechnology\\\\project\\\\2\\\\Final-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Amr\\\\Duisburg\\\\1semester\\\\AdvancedWebTechnology\\\\project\\\\2\\\\Final-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Amr\\\\Duisburg\\\\1semester\\\\AdvancedWebTechnology\\\\project\\\\2\\\\Final-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Amr\\\\Duisburg\\\\1semester\\\\AdvancedWebTechnology\\\\project\\\\2\\\\Final-master\\\\client\\\\src\\\\components\\\\Myposts.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from \"reactstrap\";\nimport Footer from './Footer';\nimport { Button, Form, Input } from 'reactstrap';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\n\nvar AllPosts = /*#__PURE__*/function (_Component) {\n  _inherits(AllPosts, _Component);\n\n  function AllPosts() {\n    var _this;\n\n    _classCallCheck(this, AllPosts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllPosts).call(this));\n\n    _this.getMyPost = function (e) {\n      //console.log(this.state,\"The state --- $$$$\")\n      // let email = this.state.email\n      //let formdata = new FormData()\n      //formdata.append('email',email)\n      //let data = JSON.stringify({\n      //    email:'Dengbaohuilea@gmail.com'\n      // })\n      // axios.post('http://localhost:3000/get_post',data)//,{\n      // headers:{\n      //   'Content-Type':'application/json',\n      //}\n      //})\n      axios.post('http://localhost:3000/get_post', {\n        email: _this.state.email\n      }, {\n        headers: {\n          authorization: 'usertoken'\n        }\n      }).then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          posts: response.data\n        });\n\n        console.log('Data has been received!');\n\n        _this.getAllPost();\n      }).catch(function (error) {\n        // alert('Error retrieving data!!');\n        console.log('No Data');\n        console.log(error.response);\n        console.log('State', _this.state);\n      });\n    };\n\n    _this.displayMyPost = function (posts) {\n      if (!posts.length) return null;\n      return posts.map(function (posts, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, posts.title, posts.content, posts.category);\n      });\n    };\n\n    _this.state = {\n      'email': '',\n      //'newemail':[],\n      'username': '',\n      'title': '',\n      'content': '',\n      'category': '',\n      'image': 'images/Propic1.png',\n      'file': '',\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(AllPosts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMyPost();\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n      this.setState({\n        email: decoded.identity.email,\n        username: decoded.identity.username // newemail: JSON.parse(JSON.stringify(this.state.email))\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isFetching = this.state.isFetching;\n\n      if (isFetching != null) {\n        console.log('render started!!!');\n        console.log('State', this.state);\n        var email = this.state.email;\n      } //console.log(JSON.parse(JSON.stringify(this.state.email)))\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, \" hallo from mypost \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blog mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, this.displayMyPost(this.state.posts)));\n    }\n  }]);\n\n  return AllPosts;\n}(Component);\n\nexport { AllPosts as default };","map":{"version":3,"sources":["C:/Amr/Duisburg/1semester/AdvancedWebTechnology/project/2/Final-master/client/src/components/Myposts.js"],"names":["React","Component","Container","Row","Col","Footer","Button","Form","Input","jwt_decode","axios","AllPosts","getMyPost","e","post","email","state","headers","authorization","then","response","console","log","setState","posts","data","getAllPost","catch","error","displayMyPost","length","map","index","title","content","category","token","localStorage","usertoken","decoded","identity","username","isFetching"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,YAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAwBC,KAAxB,QAAoC,YAApC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAGsBC,Q;;;AACpB,sBAAc;AAAA;;AAAA;;AACZ;;AADY,UA8BZC,SA9BY,GA8BA,UAACC,CAAD,EAAO;AACf;AACD;AACC;AACA;AACA;AACA;AACD;AAEA;AACI;AACE;AACD;AACJ;AACAH,MAAAA,KAAK,CAACI,IAAN,CAAW,gCAAX,EAA6C;AACrCC,QAAAA,KAAK,EAAC,MAAKC,KAAL,CAAWD;AADoB,OAA7C,EAEM;AACFE,QAAAA,OAAO,EAAC;AACJC,UAAAA,aAAa,EAAC;AADV;AADN,OAFN,EAOGC,IAPH,CAOQ,UAACC,QAAD,EAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,cAAKG,QAAL,CAAc;AAACC,UAAAA,KAAK,EAACJ,QAAQ,CAACK;AAAhB,SAAd;;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,cAAKI,UAAL;AAED,OAbH,EAcGC,KAdH,CAcS,UAACC,KAAD,EAAS;AACf;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACR,QAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,MAAKN,KAAzB;AAEF,OApBD;AAqBH,KAjEW;;AAAA,UAwEZa,aAxEY,GAwEI,UAACL,KAAD,EAAU;AACtB,UAAG,CAACA,KAAK,CAACM,MAAV,EAAkB,OAAO,IAAP;AAElB,aAAON,KAAK,CAACO,GAAN,CAAU,UAACP,KAAD,EAAOQ,KAAP;AAAA,4BACb;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBR,KAAK,CAACS,KAAxB,EACCT,KAAK,CAACU,OADP,EAECV,KAAK,CAACW,QAFP,CADa;AAAA,OAAV,CAAP;AAMH,KAjFW;;AAEZ,UAAKnB,KAAL,GAAa;AACT,eAAQ,EADC;AAET;AACA,kBAAW,EAHF;AAIT,eAAQ,EAJC;AAKT,iBAAU,EALD;AAMT,kBAAW,EANF;AAOT,eAAQ,oBAPC;AAQT,cAAO,EARE;AASRQ,MAAAA,KAAK,EAAC;AATE,KAAb;AAFY;AAcf;;;;wCAEwB;AACjB,WAAKZ,SAAL;AACA,UAAMwB,KAAK,GAAGC,YAAY,CAACC,SAA3B;AACA,UAAMC,OAAO,GAAG9B,UAAU,CAAC2B,KAAD,CAA1B;AACA,WAAKb,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEwB,OAAO,CAACC,QAAR,CAAiBzB,KADd;AAEV0B,QAAAA,QAAQ,EAAEF,OAAO,CAACC,QAAR,CAAiBC,QAFjB,CAIX;;AAJW,OAAd;AAQH;;;6BAwDS;AAAA,UACEC,UADF,GACiB,KAAK1B,KADtB,CACE0B,UADF;;AAEN,UAAIA,UAAU,IAAG,IAAjB,EACI;AAACrB,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACDD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKN,KAAzB;AACA,YAAMD,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AAA+B,OAL7B,CAMF;;;AACA,0BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAGI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKc,aAAL,CAAmB,KAAKb,KAAL,CAAWQ,KAA9B,CADL,CAHJ,CAFJ;AAYC;;;;EAxG0BvB,S;;SAAjBU,Q","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Row, Col} from \"reactstrap\";\nimport Footer from './Footer';\nimport { Button, Form,  Input} from 'reactstrap';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios'\n\n\nexport default  class AllPosts extends Component {\n  constructor() {\n    super()\n    this.state = {\n        'email':'',\n        //'newemail':[],\n        'username':'',\n        'title':'',\n        'content':'',\n        'category':'',\n        'image':'images/Propic1.png',\n        'file':'',\n         posts:[],\n\n    }\n}\n\n    componentDidMount () {\n        this.getMyPost();\n        const token = localStorage.usertoken\n        const decoded = jwt_decode(token)\n        this.setState({\n            email: decoded.identity.email,\n            username: decoded.identity.username\n\n           // newemail: JSON.parse(JSON.stringify(this.state.email))\n\n        })\n        \n    }\n\n    getMyPost = (e) => {\n        //console.log(this.state,\"The state --- $$$$\")\n       // let email = this.state.email\n        //let formdata = new FormData()\n        //formdata.append('email',email)\n        //let data = JSON.stringify({\n        //    email:'Dengbaohuilea@gmail.com'\n       // })\n        \n       // axios.post('http://localhost:3000/get_post',data)//,{\n           // headers:{\n             //   'Content-Type':'application/json',\n            //}\n        //})\n        axios.post('http://localhost:3000/get_post', {            \n                email:this.state.email\n            },{\n            headers:{\n                authorization:'usertoken'\n            },\n            \n        }).then((response) => {\n            console.log(response);\n            this.setState({posts:response.data})\n            console.log('Data has been received!');\n            this.getAllPost()\n\n          })\n          .catch((error)=>{\n           // alert('Error retrieving data!!');\n           console.log('No Data')\n           console.log(error.response);\n           console.log('State',this.state);\n           \n        });\n    }\n    \n\n    \n   \n\n\n    displayMyPost = (posts) =>{\n        if(!posts.length) return null;\n\n        return posts.map((posts,index)=>(\n            <div key={index}>{posts.title}\n            {posts.content}\n            {posts.category}</div>\n\n        ));\n    }\n\n\n    render () {\n        const { isFetching } = this.state;\n        if (isFetching !=null)\n            {console.log('render started!!!')\n            console.log('State',this.state);\n            const email = this.state.email}\n            //console.log(JSON.parse(JSON.stringify(this.state.email)))\n            return (\n                \n                <div>\n                    <div> hallo from mypost </div>\n\n                    <div className=\"blog mt-5\">\n                        {this.displayMyPost(this.state.posts)}\n                    </div>\n                \n                </div>\n            \n            )\n            }\n    }"]},"metadata":{},"sourceType":"module"}